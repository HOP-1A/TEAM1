// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
 
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
 
generator client {
  provider = "prisma-client-js"
}
 
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
model Users {
  id          String    @id @default(uuid())
  username    String
  email       String    @unique
  password    String
  phoneNumber String    @unique
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())
  Product     Product[]
  Order       Order[]
  OrderItem   OrderItem[]
}
 
model Product {
  id          String   @id @default(uuid())
  price       Int
  quantity    Int
  description String
  productImg  String[]
  category    Category @relation(fields: [categoryId], references: [id])
  name        String
  user        Users    @relation(fields: [usersId], references: [id])
  delivery    Boolean
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
  usersId     String
  categoryId  String
  orderItems  OrderItem[]
}
 
model Category {
  id           String    @id @default(uuid())
  categoryType String
  updatedAt    DateTime  @updatedAt
  createdAt    DateTime  @default(now())
  Product      Product[]
}

model Order {
  id    String @id @default(uuid())
  orderItems OrderItem[]
  user Users @relation(fields: [usersId], references: [id])
  usersId String
  totalPrice Float
}


model OrderItem {
  id          String @id @default(uuid())
  productId   String 
  product     Product @relation(fields: [productId], references: [id])
  quantity    Int
  usersId     String 
  users       Users    @relation(fields: [usersId], references: [id])
  orderId     String
  order       Order    @relation(fields: [orderId], references: [id])
}